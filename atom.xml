<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DavidPan Blog]]></title>
  <link href="http://davidpan.github.com/atom.xml" rel="self"/>
  <link href="http://davidpan.github.com/"/>
  <updated>2012-10-28T17:44:25+08:00</updated>
  <id>http://davidpan.github.com/</id>
  <author>
    <name><![CDATA[David Pan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[翻越长城需要使用的工具]]></title>
    <link href="http://davidpan.github.com/climb-the-great-wall/"/>
    <updated>2012-10-28T17:01:00+08:00</updated>
    <id>http://davidpan.github.com/climb-the-great-wall</id>
    <content type="html"><![CDATA[<h2>1、无国外VPS等资源</h2>

<p>大部分人都属于这类用户,幸好有些免费服务可以供使用。</p>

<h3>Goagent</h3>

<p><a href="http://goo.gl/sxgfB">Goagent下载地址</a></p>

<p>下载后解压缩到任意目录。</p>

<h4>部署说明</h4>

<ul>
<li><a href="http://appengine.google.com/">申请Google App Engine</a></li>
</ul>


<p>使用Google帐号，即可申请。</p>

<ul>
<li><a href="https://appengine.google.com/start/createapp">Create Application</a></li>
</ul>


<p>Application Identifler输入6-10位随机数字加英文字母(例如:800gfw)，同时复制到Application Title，其他部分使用默认即可。点击Create Application，就建立成功了。appid就是刚才你输入的6-10位随机数字加英文，请记录下来。</p>

<ul>
<li>配置goagent</li>
</ul>


<p>打开已经解压缩的goagent目录，找到local\proxy.ini并打开。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[gae]
</span><span class='line'>appid=800gfw #请修改为你设置的appid</span></code></pre></td></tr></table></div></figure>


<p>保存该文件</p>

<ul>
<li>部署goagent到GAE</li>
</ul>


<p>打开已经解压缩的goagent目录，双击server\uploader.bat,将提示你输入appid，然后再输入你的Google帐号和密码，直到提示你部署完成。</p>

<ul>
<li>运行本地代理</li>
</ul>


<p>打开已经解压缩的goagent目录，双击local\proxy.exe 将开始运行本地代理。如果你希望以后每次开机就运行该程序，请双击local\addto-startup.vbs 。</p>

<ul>
<li>浏览器配置</li>
</ul>


<p>建议使用Chrome浏览器，安装SwitchySharp插件，安装完成后导入:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://goagent.googlecode.com/files/SwitchyOptions.bak</span></code></pre></td></tr></table></div></figure>


<p>导入成功后，到SwitchySharp选项的切换规则的在线规则列表部分，点击&#8217;立即更新列表&#8217;。然后将SwitchSharp设置为自动切换模式。即可正常使用。</p>

<ul>
<li>安全考量</li>
</ul>


<p>建议安装KB SSL Enforcer插件，并在GAE上启用密码连接。</p>

<h2>2、有国外VPS等资源</h2>

<h3>SSH 隧道</h3>

<p>需要有SSH帐号，建议使用<a href="http://www.bitvise.com/tunnelier">Bitvise SSH Client</a>作为客户端工具。</p>

<p>在Chrome可以同样使用SwitchySharp插件，在Firefox使用FoxyProxy插件。</p>

<h3>PPTP等VPN</h3>

<p>请参见<a href="http://blog.it580.com/debian-linux-pptp-vpn%e5%ae%89%e8%a3%85%e8%ae%be%e7%bd%aelinode-vps">Debian Linux PPTP VPN安装设置(Linode VPS)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[切换到Octopress]]></title>
    <link href="http://davidpan.github.com/change-to-octopress/"/>
    <updated>2012-10-18T23:20:00+08:00</updated>
    <id>http://davidpan.github.com/change-to-octopress</id>
    <content type="html"><![CDATA[<h3>原因</h3>

<p>Octopress是基于Jekyll形成的一套Blog框架,增加了很多方便的功能.确实比原始的Jekyll方便不少.</p>

<p>于是就决定砍掉Jekyll,重新部署一下看看.</p>

<h3>Octopress部署</h3>

<ul>
<li>安装Git</li>
<li>安装Ruby 1.9.3 (推荐使用RVM)</li>
<li>更新gem到最新</li>
</ul>


<h4>配置本地Octopress</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git davidpan.github.com
</span><span class='line'>cd davidpan.github.com
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h4>部署到GitHub</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p><em>只需要输入github上的仓库url即可</em></p>

<h4>修改配置文件</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nano _config.yml</span></code></pre></td></tr></table></div></figure>


<p>基本和Jekyll的配置方式差不多,修改如下参数：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>url:
</span><span class='line'>title:
</span><span class='line'>subtitle:
</span><span class='line'>author:
</span><span class='line'>
</span><span class='line'>root:
</span><span class='line'>permalink:
</span><span class='line'>
</span><span class='line'>github_user:
</span><span class='line'>twitter_user:
</span><span class='line'>disqus_short_name:
</span><span class='line'>google_analytics_tracking_id:</span></code></pre></td></tr></table></div></figure>


<p>可以根据你自己的情况修改。</p>

<h4>生成静态文件并部署</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<h4>本地测试</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>和Jekyll一样访问 http://localhost:4000/</p>

<h4>更新文章及发布</h4>

<h5>新建文章</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["title name"]</span></code></pre></td></tr></table></div></figure>


<h5>新建页面</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page["page name"]</span></code></pre></td></tr></table></div></figure>


<h5>生成并发布到GitHub</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<h5>查询所有rake参数</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake -T</span></code></pre></td></tr></table></div></figure>


<h4>延伸阅读</h4>

<ol>
<li><a href="http://octopress.org/docs/">Octopress官方文档(英文)</a></li>
<li><a href="http://octopress.org/docs/plugins/">Octopress插件使用(英文)</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jekyll bootstrap 配置]]></title>
    <link href="http://davidpan.github.com/jekyll-bootstrap-setup/"/>
    <updated>2012-10-18T22:03:00+08:00</updated>
    <id>http://davidpan.github.com/jekyll-bootstrap-setup</id>
    <content type="html"><![CDATA[<h2>1.修改配置</h2>

<p>执行命令:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nano _config.yml</span></code></pre></td></tr></table></div></figure>


<p>将</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>permalink: /:categories/:year/:month/:day/:title/</span></code></pre></td></tr></table></div></figure>


<p>修改为</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>permalink: /:categories/:title/</span></code></pre></td></tr></table></div></figure>


<p>将title修改为你的Blog名称,production_url修改为你的github域名.</p>

<p>去disqus注册帐号并新建站点,将设置的英文名放到 comments->disqus下的short_name.</p>

<p>如果使用google分析,将你在google分析新加的站点的跟踪码放到analytics->google的tracking_id部分.</p>

<h2>2.编辑首页</h2>

<p>执行命令: nano index.md</p>

<p>修改title部分为你的首页名称,将不需要的部分删除,只需 保留原来的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="k">for</span> <span class="n">post</span> <span class="k">in</span> <span class="n">site</span><span class="o">.</span><span class="n">posts</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">&lt;li&gt;&lt;span&gt;{{ post.date | date_to_string  }</span><span class="p">}</span> <span class="o">&lt;</span><span class="sr">/span&gt; &amp;raquo; &lt;a href=&quot;{{ BASE_PATH }}{{ post.url }}&quot;&gt;{{ post.title }}&lt;/</span><span class="n">a</span><span class="o">&gt;&lt;</span><span class="sr">/li&gt;</span>
</span><span class='line'><span class="sr">{% endfor %}</span>
</span><span class='line'><span class="sr">&lt;/u</span><span class="n">l</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Jekyll在GitHub上架设Blog]]></title>
    <link href="http://davidpan.github.com/use-jekyll-on-github-deployment-blog/"/>
    <updated>2012-10-18T21:58:00+08:00</updated>
    <id>http://davidpan.github.com/use-jekyll-on-github-deployment-blog</id>
    <content type="html"><![CDATA[<p>GitHub很多朋友都知道，目前是做git托管最大的网站。详细介绍请看:<a href="https://github.com/about">关于Github</a>.</p>

<p>Jekyll是ruby开发的静态页面解析器，可非常简单的用于blog的静态页面生成。</p>

<h2>1.建立GitHub账号</h2>

<p>访问注册页面:<a href="https://github.com/signup/free">Github免费注册页面</a> 。输入用户名(英文+数字)、电子邮箱地址、设置密码(必须包含一个小写字母、一个数字，长度要7位及以上。)，点 $</p>

<h2>2.新建仓库</h2>

<p>注册后登陆GitHub，访问:<a href="https://github.com/new">Create a New Repo</a>建立新的仓库。仓库名称必须使用如下格式:你的用户名.github.com ,不要选中:Initialize this reposito$</p>

<h2>3.安装GitHub客户端</h2>

<p>Windows下建议安装<a href="http://windows.github.com/">GitHub For Windows</a>,其他平台可以直接安装Git客户端。</p>

<h2>4.将Jekyll部署到GitHub</h2>

<pre><code>    git clone https://github.com/plusjade/jekyll-bootstrap.git BLOGIT580.github.com
    cd BLOGIT580.github.com
    git remote set-url origin git@github.com:BLOGIT580/BLOGIT580.github.com.git
    git push origin master
</code></pre>

<p><em>请将BLOGIT580，替换为你的用户名。</em></p>

<p>十分钟后打开浏览器，访问BLOGIT580.github.com，就可以看到架设的Blog了。</p>

<h2>5.Jekyll本地环境部署</h2>

<p>ruby环境的搭建请参考: <a href="http://blog.it580.com/install-ruby-on-rails-on-ubuntu-12-04-1-lts">Ruby On Rails在Ubuntu 12.04.1 LTS下的安装</a></p>

<p>执行命令:</p>

<pre><code>  gem install jekyll
    cd BLOGIT580.github.com
    rake post title=”hello world ” #新建文章
    rm –rf _post/core-samples/ #清理示例文章
    jekyll –server
</code></pre>

<p><em>请将BLOGIT580，替换为你的用户名。</em></p>

<p>打开浏览器，访问:http://localhost:4000 查看效果。</p>

<h2>6.基本清理和新建文章测试</h2>

<p>执行命令:</p>

<pre><code>    cd BLOGIT580.github.com
    rake post title=”hello world ” #新建文章
    rm –rf _post/core-samples/ #清理示例文章
    jekyll –server
</code></pre>

<p><em>请将BLOGIT580，替换为你的用户名。</em></p>

<p>打开浏览器，访问:http://localhost:4000 查看效果。</p>

<h2>7.更新本地修改到GitHub</h2>

<p>执行命令:</p>

<pre><code>    cd BLOGIT580.github.com
    git add .
    git commit –m “first commit”
    git push
</code></pre>

<p><em>请将BLOGIT580，替换为你的用户名。</em></p>

<p>执行完成后，本地所有修改将同步到远程服务器上。</p>

<h3>其他建议阅读文档:</h3>

<ul>
<li> <a href="http://wowubuntu.com/markdown/">Markdown语法说明(简体版)</a></li>
<li> <a href="http://jekyllbootstrap.com/lessons/jekyll-introduction.html">Jekyll介绍(英文)</a></li>
<li> <a href="https://help.github.com/">GitHub帮助(英文)</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
